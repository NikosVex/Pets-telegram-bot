import logging
from aiogram import F, Router
from aiogram.types import Message, FSInputFile, CallbackQuery, InputMediaPhoto
from aiogram.exceptions import TelegramBadRequest

import app.keyboards as kb
import app.database.requests as rq

router = Router()


@router.message(F.text == 'üê± –°–º–æ—Ç—Ä–µ—Ç—å –ø–∏—Ç–æ–º—Ü–µ–≤')
async def show_random_pet_handler(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–µ ‚å®Ô∏è', reply_markup=kb.watching_pets)


@router.message(F.text == 'üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü')
async def show_random_pet_handler(message: Message):
    try:
        pet = await rq.get_random_pet()
        if pet:
            await message.answer_photo(
                photo=FSInputFile(pet.photo_path),
                caption=f'–ò–º—è: <b>{pet.name}</b>\n–ü–æ—Ä–æ–¥–∞: <b>{pet.breed}</b>\n'
                f'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <b>{pet.additionally}</b>\n\n<b>{pet.likes}</b> ‚ù§Ô∏è',
                reply_markup=kb.pets_keyboard(pet.id), parse_mode='html'
            )
        else:
            await message.answer('–ü–∏—Ç–æ–º—Ü—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç :(')
    except Exception as e:
        await message.answer('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø–∏—Ç–æ–º—Ü–µ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ!')
        logging.error(f'–û—à–∏–±–∫–∞ –≤ show_random_pet_handler: {e}')


@router.callback_query(F.data == 'next_pet')
async def next_pet_handler(callback: CallbackQuery):
    try:
        pet = await rq.get_random_pet()
        if pet:
            await callback.message.edit_media(
                InputMediaPhoto(media=FSInputFile(pet.photo_path),
                                caption=f'–ò–º—è: <b>{pet.name}</b>\n–ü–æ—Ä–æ–¥–∞: <b>{pet.breed}</b>\n'
                                f'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <b>{pet.additionally}</b>\n\n<b>{pet.likes}</b> ‚ù§Ô∏è',
                                parse_mode='html'),
                reply_markup=kb.pets_keyboard(pet.id)
            )
    except TelegramBadRequest:
        await callback.answer('–í—ã–ø–∞–ª —Ç–æ—Ç –∂–µ –ø–∏—Ç–æ–º–µ—Ü! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')


@router.message(F.text == '‚¨ÖÔ∏è –í –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def main_menu_handler(message: Message):
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìã', reply_markup=kb.main_keyboard(message.from_user.id))
