import logging
from aiogram import F, Router
from aiogram.types import Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

import app.keyboards as kb
import app.database.requests as rq

router = Router()


class AddProposal(StatesGroup):
    proposal = State()


@router.message(F.text == 'üó≥ –ü—Ä–µ–¥–ª–æ–∂–∫–∞')
async def add_proposal_handler_start(message: Message, state: FSMContext):
    await state.set_state(AddProposal.proposal)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞, –µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫! (–Ω–µ –±–æ–ª–µ–µ 400 —Å–∏–º–≤–æ–ª–æ–≤)',
                         reply_markup=kb.exit_button)


@router.message(AddProposal.proposal)
async def add_proposal_handler_end(message: Message, state: FSMContext):
    try:
        if len(message.text) <= 400:
            await state.update_data(proposal=message.text)
            data = await state.get_data()
            await rq.add_proposal(message.from_user.id, data['proposal'])
            await state.clear()
            await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –û–Ω–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º :)',
                                 reply_markup=kb.main_keyboard(message.from_user.id))
            logging.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} –¥–æ–±–∞–≤–∏–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!')
        else:
            await message.answer(
                '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 400 —Å–∏–º–≤–æ–ª–æ–≤',
                reply_markup=kb.exit_button
            )
    except Exception as e:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ!')
        logging.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ add_proposal_handler_end: {e}')
